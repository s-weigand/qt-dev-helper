[tool.black]
line-length = 99
target-version = ['py38']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
src_paths = ["qt_dev_helper", "test"]
line_length = 99
force_single_line = true
remove_redundant_aliases = true

[tool.interrogate]
exclude = ["setup.py", "docs", "tests"]
ignore-init-module = true
ignore-regex = [".*QtToolNotFoundError.*", ".*QtToolExecutionError.*"]
fail-under = 100

[tool.coverage.run]
branch = true
omit = [
  'setup.py',
  'qt_dev_helper/__init__.py',
  'qt_dev_helper/cli/_cli_docs.py',
  '**/pip-*',
  '**/pytest-*/*',
  '**/shibokensupport/*',
  '**/signature_bootstrap.py',
  'tests/*',
# comment the above line if you want to see if all tests did run
  ]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
  # Have to re-enable the standard pragma
  'pragma: no cover',

  # Don't complain about missing debug-only code:
  'def __repr__',
  'if self\.debug',

  # Don't complain if tests don't hit defensive assertion code:
  'raise AssertionError',
  'raise NotImplementedError',

  # Don't complain if non-runnable code isn't run:
  'if 0:',
  'if __name__ == .__main__.:',
  # only accessible during typechecking
  'if TYPE_CHECKING:',
]


[tool.mypy]
plugins = "pydantic.mypy"
exclude = "^docs/"
ignore_missing_imports = true
scripts_are_modules = true
show_error_codes = true
warn_unused_configs = true
warn_unused_ignores = true
strict_equality = true
disallow_untyped_defs=true
disallow_incomplete_defs=true


[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs=false
disallow_incomplete_defs=false
