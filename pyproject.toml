[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling" ]

[project]

name = "qt-dev-helper"
description = "Toolbox to help develop Qt applications, improving the usability of the existing tooling."
readme = "README.md"
keywords = [ "qt_dev_helper" ]
license = { file = "LICENSE" }

authors = [ { name = "Sebastian Weigand", email = "s.weigand.phy@gmail.com" } ]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dynamic = [ "version" ]

dependencies = [
  "eval-type-backport; python_version<'3.10'",
  "pydantic>=2.0.2",
  "pydantic-settings>=2.0.1",
  "qtsass>=0.3.1",
  "rich>=12",
  "tomli>=2.0.1",
]
optional-dependencies.cli = [ "typer>=0.12.4" ]
optional-dependencies.dev = [ "qt-dev-helper[docs,test,cli]" ]
optional-dependencies.docs = [
  "autodoc-pydantic>=2.2",
  "myst-parser>=2",
  "numpydoc>=1.6",
  "sphinx>=7",
  "sphinx-click>=3.1",
  "sphinx-copybutton>=0.5.2",
  "sphinx-last-updated-by-git>=0.3.6",
  "sphinx-rtd-theme>=1.3",
  "sphinxcontrib-jquery>=4.1",         # Needed for the search to work Ref.: https://github.com/readthedocs/sphinx_rtd_theme/issues/1434
]
optional-dependencies.pyside6 = [ "pyside6-essentials" ]
optional-dependencies.test = [
  "coverage[toml]>=7.3.2",
  "pluggy>=1.3",
  "pyside6>=6.5.2",
  "pytest>=7.4.3",
  "pytest-cov>=4.1",
  "pytest-env>=0.6.2",
  "qt5-applications",
  "qt6-applications",
  "setuptools",            # needed because qt-applications use pkg-resources
  "tomli-w>=1",
]
urls.Changelog = "https://qt-dev-helper.readthedocs.io/en/latest/changelog.html"
urls.Documentation = "https://qt-dev-helper.readthedocs.io"
urls.Homepage = "https://github.com/s-weigand/qt-dev-helper"
urls.Source = "https://github.com/s-weigand/qt-dev-helper"
urls.Tracker = "https://github.com/s-weigand/qt-dev-helper/issues"
scripts."qt_dev_helper" = "qt_dev_helper.cli.main_app:app"

[tool.hatch.version]
path = "qt_dev_helper/__init__.py"

[tool.hatch.build.targets.sdist]
include = [ "/qt_dev_helper", "/tests" ]

[tool.hatch.envs.default]
features = [ "dev" ]
python = "3.9"
installer = "uv"

[tool.docformatter]
black = true
wrap-summaries = 99
wrap-descriptions = 99

[tool.pydoclint]
skip-checking-short-docstrings = false
style = 'numpy'
exclude = '^(docs/|tests?/)'
require-return-section-when-returning-nothing = false
allow-init-docstring = true

[tool.pytest.ini_options]
addopts = [
  "--cov=qt_dev_helper",
  "--cov-report=term",
  "--cov-report=xml",
  "--cov-report=html",
  "--cov-config=pyproject.toml",
]
markers = [ "slow: marks tests as slow (deselect with '-m \"not slow\"')" ]
env = [
  # prevent line wrapping in tests
  "TERMINAL_WIDTH=500",
  "_TYPER_FORCE_DISABLE_TERMINAL=1",
  "_TYPER_STANDARD_TRACEBACK=1",
]

[tool.coverage.paths]
source = [
  "qt_dev_helper",
  "*/site-packages/qt_dev_helper",
]
[tool.coverage.run]
branch = true
omit = [
  'qt_dev_helper/cli/_cli_docs.py',
  '*/site-packages/qt_dev_helper/cli/_cli_docs.py',
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
  # Have to re-enable the standard pragma
  'pragma: no cover',

  # Don't complain about missing debug-only code:
  'def __repr__',
  'if self\.debug',

  # Don't complain if tests don't hit defensive assertion code:
  'raise AssertionError',
  'raise NotImplementedError',

  # Don't complain if non-runnable code isn't run:
  'if 0:',
  'if __name__ == .__main__.:',
  # only accessible during typechecking
  'if TYPE_CHECKING:',
]

[tool.mypy]
plugins = "pydantic.mypy"
exclude = "^docs/"
ignore_missing_imports = true
scripts_are_modules = true
show_error_codes = true
warn_unused_configs = true
warn_unused_ignores = true
strict_equality = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

# For now this is not used because pydoclint does not support toml when used with flake8

[tool.interrogate]
exclude = [ "docs", "tests" ]
ignore-init-module = true
ignore-regex = [ ".*QtToolNotFoundError.*", ".*QtToolExecutionError.*" ]
fail-under = 100
